import ffi from "ffi-napi";
import ref from "ref-napi";
export declare const rtlsdr_dev: ref.Type<void>;
export declare const rtlsdr_devPtr: ref.Type<ref.Pointer<void>>;
export declare const rtlsdr_tunerEnum: string[];
export declare const rtlsdr_tuner: ref.Type<void>;
export declare const uint8Ptr: ref.Type<ref.Pointer<number>>;
export declare const uint32Ptr: ref.Type<ref.Pointer<number>>;
export declare const charPtr: ref.Type<ref.Pointer<number>>;
export declare const intPtr: ref.Type<ref.Pointer<number>>;
export declare const voidPtr: ref.Type<ref.Pointer<void>>;
export declare const librtlsdr: {
    rtlsdr_get_device_count: ffi.ForeignFunction<number, []>;
    rtlsdr_get_device_name: ffi.ForeignFunction<string | null, [number]>;
    rtlsdr_get_device_usb_strings: ffi.ForeignFunction<number, [number, string, string, string]>;
    rtlsdr_get_index_by_serial: ffi.ForeignFunction<number, [string | null]>;
    rtlsdr_open: ffi.ForeignFunction<number, [ref.Pointer<void>, number]>;
    rtlsdr_close: ffi.ForeignFunction<number, [ref.Pointer<void>]>;
    rtlsdr_set_xtal_freq: ffi.ForeignFunction<number, [ref.Pointer<void>, number, number]>;
    rtlsdr_get_xtal_freq: ffi.ForeignFunction<number, [ref.Pointer<void>, ref.Pointer<number>, ref.Pointer<number>]>;
    rtlsdr_get_usb_strings: ffi.ForeignFunction<number, [ref.Pointer<void>, ref.Pointer<number>, ref.Pointer<number>, ref.Pointer<number>]>;
    rtlsdr_write_eeprom: ffi.ForeignFunction<number, [ref.Pointer<void>, ref.Pointer<number>, number, number]>;
    rtlsdr_read_eeprom: ffi.ForeignFunction<number, [ref.Pointer<void>, ref.Pointer<number>, number, number]>;
    rtlsdr_set_center_freq: ffi.ForeignFunction<number, [ref.Pointer<void>, number]>;
    rtlsdr_get_center_freq: ffi.ForeignFunction<number, [ref.Pointer<void>]>;
    rtlsdr_set_freq_correction: ffi.ForeignFunction<number, [ref.Pointer<void>, number]>;
    rtlsdr_get_freq_correction: ffi.ForeignFunction<number, [ref.Pointer<void>]>;
    rtlsdr_get_tuner_type: ffi.ForeignFunction<number, [ref.Pointer<void>]>;
    rtlsdr_get_tuner_gains: ffi.ForeignFunction<number, [ref.Pointer<void>, ref.Pointer<number>]>;
    rtlsdr_set_tuner_gain: ffi.ForeignFunction<number, [ref.Pointer<void>, number]>;
    rtlsdr_set_tuner_bandwidth: ffi.ForeignFunction<number, [ref.Pointer<void>, number]>;
    rtlsdr_get_tuner_gain: ffi.ForeignFunction<number, [ref.Pointer<void>]>;
    rtlsdr_set_tuner_if_gain: ffi.ForeignFunction<number, [ref.Pointer<void>, number, number]>;
    rtlsdr_set_tuner_gain_mode: ffi.ForeignFunction<number, [ref.Pointer<void>, number]>;
    rtlsdr_set_sample_rate: ffi.ForeignFunction<number, [ref.Pointer<void>, number]>;
    rtlsdr_get_sample_rate: ffi.ForeignFunction<number, [ref.Pointer<void>]>;
    rtlsdr_set_testmode: ffi.ForeignFunction<number, [ref.Pointer<void>, number]>;
    rtlsdr_set_agc_mode: ffi.ForeignFunction<number, [ref.Pointer<void>, number]>;
    rtlsdr_set_direct_sampling: ffi.ForeignFunction<number, [ref.Pointer<void>, number]>;
    rtlsdr_get_direct_sampling: ffi.ForeignFunction<number, [ref.Pointer<void>]>;
    rtlsdr_set_offset_tuning: ffi.ForeignFunction<number, [ref.Pointer<void>, number]>;
    rtlsdr_get_offset_tuning: ffi.ForeignFunction<number, [ref.Pointer<void>]>;
    rtlsdr_reset_buffer: ffi.ForeignFunction<number, [ref.Pointer<void>]>;
    rtlsdr_read_sync: ffi.ForeignFunction<number, [ref.Pointer<void>, ref.Pointer<void>, number, ref.Pointer<number>]>;
    rtlsdr_read_async: ffi.ForeignFunction<number, [ref.Pointer<void>, ref.Pointer<unknown>, ref.Pointer<unknown>, number, number]>;
    rtlsdr_cancel_async: ffi.ForeignFunction<number, [ref.Pointer<void>]>;
    rtlsdr_set_bias_tee: ffi.ForeignFunction<number, [ref.Pointer<void>, number]>;
};
